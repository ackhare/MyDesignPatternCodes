Builder pattern builds a complex object using simple objects and using a step by step approach. This type of design pattern comes under creational pattern 
A Builder class builds the final object step by step. This builder is independent of other ob

jects.
Implementation
We have considered a business case of fast-food restaurant where a typical meal could be a burger and a cold drink.

 Burger(so veg buger is a type of burger) could be either a Veg Burger or Chicken Burger and will be packed by a wrapper. Cold drink could be either a coke or pepsi and will be packed in a bottle

.
SO here paxcking and that item are two abstractions at the topmost heiarchy 
Tyhese are entity associated with each , which we can associate with each of the concrete types

We are going to create an Item interface representing food items such as
 burgers and cold drinks and concrete classes implementing the Item interface and a 

Packing interface representing packaging of food items and concrete classes implementing the Packing interface as burger would be packed in wrapper and cold drink would be packed as bottle.


We then create a Meal class having ArrayList of Item and a MealBuilder to build different types of Meal objects by combining Item. BuilderPatternDemo, our demo class will use MealBuilder to build a Meal.





